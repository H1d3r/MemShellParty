plugins {
    id "io.freefair.lombok" version "8.11"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

group = 'com.reajason.javaweb.memsell'
version = rootProject.version

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

def runtimeJvmArgs = [
        '--add-opens=java.base/java.util=ALL-UNNAMED',
        '--add-opens=java.xml/com.sun.org.apache.xalan.internal.xsltc.trax=ALL-UNNAMED',
        '--add-opens=java.xml/com.sun.org.apache.xalan.internal.xsltc.runtime=ALL-UNNAMED'
]

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
            '--add-exports=java.xml/com.sun.org.apache.xalan.internal.xsltc.trax=ALL-UNNAMED',
            '--add-exports=java.xml/com.sun.org.apache.xalan.internal.xsltc.runtime=ALL-UNNAMED'
    ]
}

tasks.withType(Test).configureEach {
    jvmArgs += runtimeJvmArgs
}

// For running the application
tasks.withType(JavaExec).configureEach {
    jvmArgs += runtimeJvmArgs
}

dependencies {
    implementation project(":common")
    implementation project(":deserialize")
    implementation project(":memshell")
    implementation project(":memshell-java8")
    implementation 'net.bytebuddy:byte-buddy'

    implementation 'javax.servlet:javax.servlet-api'
    implementation 'javax.websocket:javax.websocket-api'
    implementation 'jakarta.servlet:jakarta.servlet-api'

    implementation 'xalan:xalan'
    implementation 'org.apache.bcel:bcel'

    implementation 'commons-io:commons-io'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'commons-codec:commons-codec'
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'ch.qos.logback:logback-classic'
    implementation 'com.alibaba.fastjson2:fastjson2'
    implementation 'org.java-websocket:Java-WebSocket'

    implementation 'org.springframework:spring-webmvc'
    implementation 'org.springframework:spring-webflux'
    implementation 'io.projectreactor.netty:reactor-netty-core'

    testImplementation platform('org.junit:junit-bom')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.mockito:mockito-core"
}